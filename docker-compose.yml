version: "3"
services:
  mysql-airflow:
    image: mysql:5.7
    container_name:  mysql-airflow-container
    environment:
      -  MYSQL_ROOT_PASSWORD=rootpassword
      -  MYSQL_DATABASE=airflow
    ports:
      - 3306:3306
    volumes:
      - ./mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./mysql/data:/var/lib/mysql
  mysql:
    image: mysql:5.7
    container_name:  mysql-container
    environment:
      -  MYSQL_ROOT_PASSWORD=rootpassword
      -  MYSQL_DATABASE=airflow
    ports:
      - 3306:3306
    volumes:
      - ./mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./mysql/data:/var/lib/mysql
      
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: mlflow
      POSTGRES_PASSWORD: mlflowpassword
      POSTGRES_DB: mlflowdb
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
      
  airflow-scheduler:
    image: apache/airflow:2.3.0
    container_name: airflow-scheduler-container
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=mysql://root:rootpassword@mysql:3306/airflow
    depends_on:
      - mysql
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
    command: scheduler
    
  airflow-webserver:
    image: apache/airflow:2.3.0
    container_name: airflow-webserver-container
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=mysql://root:rootpassword@mysql:3306/airflow
    depends_on:
      - mysql
    ports:
      - 8080:8080
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
    command: webserver       
  mlflow:
    image: ghcr.io/mlflow/mlflow:latest
    container_name: mlflow-server
    ports:
      - "5000:5000"
    volumes:
      - ./mlflow:/mlflow
    environment:
      - MLFLOW_TRACKING_URI=postgresql://mlflow:mlflowpassword@postgres:5432/mlflowdb
    depends_on:
      - postgres  
    command: mlflow server --host 0.0.0.0 --port 5000
volumes:
    mlflow:
    postgres_data:
